package symmetry;
import java.awt.Point;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;


public class Axis {
	
	private Collection<Point> points;
	private Point[] pointsArray;
	
	public Axis(Collection<Point> points) {
		this.points = points;
	}
	
	public Axis(Image img) {
		points = getAxisFromImage(img);
	}

	private LinkedList<Point> getAxisFromImage(Image img) {
		LinkedList<Point> axisList = new LinkedList<Point>();
		return null;
	}

	public int getLength() {
		return points.size();
	}

	public Collection<Point> getPoints() {
		return points;
	}
	
	public Point[] getPointsArray() {
		return pointsArray;
	}

	public Point getPrevious(Point p) {
		Point[] pointsArray = points.toArray(new Point[points.size()]);
		for (int i = 1; i < points.size(); i++) {
			if (p.equals(pointsArray[i])) {
				return pointsArray[i-1];
			}
		}
		return null;
	}
	
	public Point getNext(Iterator<Point> iterator) {
		return iterator.next();
	}
	
	public Point getNext(Point p) {
		Point[] pointsArray = points.toArray(new Point[points.size()]);
		for (int i = 0; i < points.size() - 1; i++) {
			if (p.equals(pointsArray[i])) {
				return pointsArray[i+1];
			}
		}
		return null;
		
		//TODO: change to look for point more than 1 pixel along
	}
	
	public String toString() {
		String axisString = "Axis string:\n";
		for (Point p : points) {
			axisString += "(" + p.x + ", " + p.y + ")\n";
		}
		return axisString;
	}
	
}
